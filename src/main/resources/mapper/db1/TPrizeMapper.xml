<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lottery.mylottery.dao.dao1.TPrizeMapper">
  <resultMap id="BaseResultMap" type="com.lottery.mylottery.dao.entity.db1.TPrize">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nick" jdbcType="VARCHAR" property="nick" />
    <result column="billNum" jdbcType="VARCHAR" property="billNum" />
    <result column="orderDt" jdbcType="TIMESTAMP" property="orderDt" />
    <result column="platformType" jdbcType="VARCHAR" property="platformType" />
    <result column="prizeType" jdbcType="VARCHAR" property="prizeType" />
    <result column="goodsName" jdbcType="VARCHAR" property="goodsName" />
    <result column="deviceInfo" jdbcType="VARCHAR" property="deviceInfo" />
    <result column="prizeStatus" jdbcType="INTEGER" property="prizeStatus" />
    <result column="receiveDt" jdbcType="TIMESTAMP" property="receiveDt" />
    <result column="createDt" jdbcType="TIMESTAMP" property="createDt" />
    <result column="actId" jdbcType="INTEGER" property="actId" />
    <result column="actName" jdbcType="VARCHAR" property="actName" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_prize
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lottery.mylottery.dao.entity.db1.TPrize">
    insert into t_prize (id, nick, billNum, 
      orderDt, prizeType, goodsName, 
      deviceInfo, prizeStatus, receiveDt, 
      createDt, actId)
    values (#{id,jdbcType=INTEGER}, #{nick,jdbcType=VARCHAR}, #{billNum,jdbcType=VARCHAR}, 
      #{orderDt,jdbcType=TIMESTAMP}, #{prizeType,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, 
      #{deviceInfo,jdbcType=VARCHAR}, #{prizeStatus,jdbcType=INTEGER}, #{receiveDt,jdbcType=TIMESTAMP}, 
      #{createDt,jdbcType=TIMESTAMP}, #{actId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.lottery.mylottery.dao.entity.db1.TPrize">
    update t_prize
    set nick = #{nick,jdbcType=VARCHAR},
      billNum = #{billNum,jdbcType=VARCHAR},
      orderDt = #{orderDt,jdbcType=TIMESTAMP},
      prizeType = #{prizeType,jdbcType=VARCHAR},
      goodsName = #{goodsName,jdbcType=VARCHAR},
      deviceInfo = #{deviceInfo,jdbcType=VARCHAR},
      prizeStatus = #{prizeStatus,jdbcType=INTEGER},
      receiveDt = #{receiveDt,jdbcType=TIMESTAMP},
      createDt = #{createDt,jdbcType=TIMESTAMP},
      actId = #{actId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, nick, billNum, orderDt, prizeType, goodsName, deviceInfo, prizeStatus, 
    receiveDt, createDt, actId
    from t_prize
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, nick, billNum, orderDt, prizeType, goodsName, deviceInfo, prizeStatus, 
    receiveDt, createDt, actId
    from t_prize
  </select>

  <select id="findByObject" parameterType="java.lang.String" resultMap="BaseResultMap">
    select t.id, t.nick, t.billNum, t.orderDt, t.prizeType, t.goodsName, t.deviceInfo, t.prizeStatus,
    t.receiveDt, t.createDt,a.actName
    from t_prize t LEFT JOIN t_act a ON t.actId=a.id  where 1=1
    <if test="target != null and target !='' ">
      AND (t.nick=#{target} or t.billNum=#{target})
    </if>
    <if test="platformType != null and platformType !='' ">
      AND t.platformType=#{platformType}
    </if>
  </select>

  <update id="receivePrize" parameterType="com.lottery.mylottery.dao.entity.db1.TPrize" >
    update t_prize
    <trim prefix="set" suffixOverrides=",">
      <if test="prizeStatus != null" >
        prizeStatus = #{prizeStatus,jdbcType=INTEGER},
      </if>
      <if test="receiveDt != null" >
        receiveDt = #{receiveDt,jdbcType=TIMESTAMP}
      </if>
    </trim>
    where prizeStatus=0 and id in
    <foreach item="item" index="index" collection="idList" open="(" separator="," close=")">
      #{idList[${index}]}
    </foreach>
  </update>

  <select id="selectByPrimaryIds" parameterType="com.lottery.mylottery.dao.entity.db1.TPrize"  resultMap="BaseResultMap">
    select * from t_prize where prizeStatus=0 and id in
    <foreach item="item" index="index" collection="idList" open="(" separator="," close=")">
      #{idList[${index}]}
    </foreach>
  </select>
</mapper>